#!/bin/bash

# Cria os diretórios principais
mkdir -p app/{models,controllers,views,helpers,mailers,jobs}
mkdir -p app/controllers/traits
mkdir -p app/models/traits
mkdir -p config/{environments,initializers,locales} db lib log public test/{controllers,models,integration,fixtures} tmp vendor

# Cria subdiretórios em 'config'
mkdir -p config/environments

# Adiciona arquivos .keep em todos os diretórios relevantes
find app config db lib log public test tmp vendor -type d -exec touch {}/.keep \;

# Cria o arquivo composer.json na raiz do projeto
cat <<EOF > composer.json
{
  "require": {
    "slim/slim": "^4.0",
    "slim/twig-view": "^3.4",
    "slim/psr7": "^1.6"
  },
  "autoload": {
    "psr-4": {
      "App\\\\": "app/",
      "App\\\\Models\\\\": "app/models/",
      "App\\\\Controllers\\\\": "app/controllers/",
      "App\\\\Views\\\\": "app/views/",
      "App\\\\Helpers\\\\": "app/helpers/",
      "App\\\\Mailers\\\\": "app/mailers/",
      "App\\\\Jobs\\\\": "app/jobs/",
      "App\\\\Models\\\\Traits\\\\": "app/models/traits/",
      "App\\\\Controllers\\\\Traits\\\\": "app/controllers/traits/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "Tests\\\\": "test/"
    }
  },
  "config": {
    "optimize-autoloader": true
  },
  "scripts": {
    "post-install-cmd": [
      "@composer dump-autoload -o"
    ],
    "post-update-cmd": [
      "@composer dump-autoload -o"
    ]
  }
}
EOF

# Cria o arquivo init.php para configurar o Slim App
cat <<EOF > init.php
<?php

use Slim\Factory\AppFactory;

require "vendor/autoload.php";

\$app = AppFactory::create();

// Add Error Handling Middleware
\$app->addErrorMiddleware(true, true, true);

EOF

# Cria o arquivo public/index.php que define a rota inicial
cat <<EOF > public/index.php
<?php

require "../init.php";

\$app->get('/', function (\$request, \$response, \$args) {
  \$response->getBody()->write("Home");
  return \$response;
});

\$app->run();

EOF

# Instala as dependências e cria o autoload.php na pasta vendor
composer install
composer dump-autoload -o

# Executa o primeiro teste com a migração
./vendor/bin/phpunit --migrate-configuration